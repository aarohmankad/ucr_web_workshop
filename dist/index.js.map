{"version":3,"sources":["../src/index.js"],"names":["app","router","Router","port","process","env","PORT","use","urlencoded","extended","connect","Student","model","createdDate","type","Date","default","now","id","String","unique","required","name","gender","enum","post","req","res","create","body","err","student","send","get","find","students","findOne","params","put","findOneAndUpdate","new","success","delete","remove","listen","console","log"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express'\nimport mongoose from 'mongoose'\nimport bodyParser from 'body-parser'\n\nlet\n\tapp = express(),\n\trouter = express.Router(),\n\tport = process.env.PORT || 8000;\n\napp.use(bodyParser.urlencoded({\n\textended: true,\n}));\napp.use('/api', router);\n\nmongoose.connect('mongodb://localhost/school');\n\nlet Student = mongoose.model(\"Student\", {\n\tcreatedDate: {\n\t\ttype: Date,\n\t\tdefault: Date.now,\n\t},\n\tid: {\n\t\ttype: String,\n\t\tunique: true,\n\t\trequired: true,\n\t},\n\tname: {\n\t\ttype: String,\n\t},\n\tgender: {\n\t\ttype: String,\n\t\tenum: [\n\t\t\t'Male',\n\t\t\t'Female',\n\t\t\t'Other',\n\t\t],\n\t},\n});\n\nrouter.post('/students', (req, res) => {\n\tStudent.create(req.body, (err, student) => {\n\t\tif (err) {\n\t\t\tres.send(err);\n\t\t}\n\n\t\treturn res.send(student);\n\t});\n});\n\nrouter.get('/students', (req, res) => {\n\tStudent.find({}, (err, students) => {\n\t\tif (err) {\n\t\t\tres.send(err);\n\t\t}\n\n\t\treturn res.send(students);\n\t});\n});\n\nrouter.get('/students/:id', (req, res) => {\n\tStudent.findOne({\n\t\tid: req.params.id\n\t}, (err, student) => {\n\t\tif (err) {\n\t\t\tres.send(err);\n\t\t}\n\n\t\treturn res.send(student);\n\t});\n});\n\nrouter.put('/students/:id', (req, res) => {\n\tStudent.findOneAndUpdate({\n\t\tid: req.params.id\n\t}, req.body,\n\t{ new: true },\n\t(err, success) => {\n\t\tif (err) {\n\t\t\tres.send(err);\n\t\t}\n\n\t\treturn res.send(success);\n\t});\n});\n\nrouter.delete('/students/:id', (req, res) => {\n\tStudent.remove({\n\t\tid: req.params.id\n\t}, (err, success) => {\n\t\tif (err) {\n\t\t\tres.send(err);\n\t\t}\n\n\t\treturn res.send(success);\n\t});\n});\n\napp.listen(port);\nconsole.log(`Magic happens on ${ port }`);\n"]}